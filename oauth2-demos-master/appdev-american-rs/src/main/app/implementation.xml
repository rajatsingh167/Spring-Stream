<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ws="http://www.mulesoft.org/schema/mule/ws"
	xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ws http://www.mulesoft.org/schema/mule/ws/current/mule-ws.xsd">
	<db:mysql-config name="MySQL_Configuration" host="mudb.mulesoft-training.com"
		port="3306" user="mule" password="mule" database="training" doc:name="MySQL Configuration" />
	<ws:consumer-config name="Web_Service_Consumer"
		wsdlLocation="http://mu.mulesoft-training.com/essentials/delta?wsdl" service="TicketServiceService"
		port="TicketServicePort" serviceAddress="http://training-u.cloudhub.io/essentials/delta"
		doc:name="Web Service Consumer" />
	<spring:beans>
		<spring:bean id="DerbyDB" name="DerbyDB"
			class="org.enhydra.jdbc.standard.StandardDataSource">
			<spring:property name="driverName"
				value="org.apache.derby.jdbc.ClientDriver" />
			<spring:property name="url"
				value="jdbc:derby://localhost:1527/memory:training" />
		</spring:bean>
	</spring:beans>
	<db:derby-config name="Derby_Configuration"
		dataSource-ref="DerbyDB" doc:name="Derby Configuration" />
	<flow name="getDeltaFlightsFlow">
		<http:listener config-ref="american-flights-api-httpListenerConfig"
			path="/delta" allowedMethods="GET" doc:name="HTTP" />
		<ws:consumer config-ref="Web_Service_Consumer" operation="listAllFlights"
			doc:name="Web Service Consumer" />
		<dw:transform-message doc:name="Transform Message"
			metadata:id="34297641-f159-443e-8f26-62d0313d6477">
			<dw:set-payload><![CDATA[%dw 1.0
%output application/json
%namespace ns0 http://soap.training.mulesoft.com/
---
payload.ns0#listAllFlightsResponse.*return map ((return , indexOfReturn) -> {
	code: return.code,
	price: return.price,
	departureDate: return.departureDate,
	origin: return.origin,
	destination: return.destination,
	emptySeats: return.emptySeats,
	plane: {
		type: return.planeType
	}
})]]></dw:set-payload>
		</dw:transform-message>
		<logger level="INFO" doc:name="Logger" />
	</flow>
	<flow name="getFlightsFlow">
		<db:select config-ref="MySQL_Configuration" doc:name="Database">
			<db:parameterized-query><![CDATA[Select *
From american]]></db:parameterized-query>
		</db:select>
		<dw:transform-message doc:name="Transform Message"
			metadata:id="29c6ed08-746e-4df6-8100-73b4bf80d814">
			<dw:input-payload doc:sample="sample_data\list_map.dwl" />
			<dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload map ((payload01 , indexOfPayload01) -> {
	ID: payload01.ID,
	code: payload01.code1 ++ payload01.code2,
	price: payload01.price as :number,
	departureDate: payload01.takeOffDate as :string,
	origin: payload01.fromAirport,
	destination: payload01.toAirport,
	emptySeats: payload01.seatsAvailable as :number,
	plane: {
		type: payload01.planeType,
		totalSeats: payload01.totalSeats as :number
	}
})]]></dw:set-payload>
		</dw:transform-message>
	</flow>
	<flow name="getFlightsByIDFlow">
		<db:select config-ref="MySQL_Configuration" doc:name="Database">
			<db:parameterized-query><![CDATA[Select *
From american
where ID = #[message.inboundProperties.'http.uri.params'.ID]]]></db:parameterized-query>
		</db:select>
		<dw:transform-message doc:name="Transform Message"
			metadata:id="29c6ed08-746e-4df6-8100-73b4bf80d814">
			<dw:input-payload doc:sample="sample_data\list_map.dwl" />
			<dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload map ((payload01 , indexOfPayload01) -> {
	ID: payload01.ID,
	code: payload01.code1 ++ payload01.code2,
	price: payload01.price as :number,
	departureDate: payload01.takeOffDate as :string,
	origin: payload01.fromAirport,
	destination: payload01.toAirport,
	emptySeats: payload01.seatsAvailable as :number,
	plane: {
		type: payload01.planeType,
		totalSeats: payload01.totalSeats as :number
	}
})]]></dw:set-payload>
		</dw:transform-message>
	</flow>
	<flow name="postFlightsFlow">
		<set-payload
			value="{&quot;message&quot;:&quot;Flight added (but not really)&quot;}"
			doc:name="Set Payload" />
	</flow>
</mule>
